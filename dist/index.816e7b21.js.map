{"mappings":"AAAA,MAAM,QAAQ;IACZ;QACE,MAAM;QACN,OAAO;IACT;IACA;QAAE,MAAM;QAAQ,OAAO;IAAqC;IAC5D;QACE,MAAM;QACN,OAAO;YACL;YACA;YACA;YACA;YACA;SACD;IACH;IACA;QAAE,MAAM;QAAS,OAAO;IAAoB;CAC7C;AAED,MAAM,OAAO,SAAS,aAAa,CAAC;AAEpC,MAAM,OAAO,CAAC,CAAC,QAAU;IACvB,sDAAsD;IACtD,IAAI,OAAO;IACX,IAAI,MAAM,IAAI,KAAK,SACjB,OAAO,MAAM;SACR,IAAI,MAAM,IAAI,KAAK,QACxB,OAAO,KAAK;SACP,IAAI,MAAM,IAAI,KAAK,WACxB,OAAO,QAAQ;SACV,IAAI,MAAM,IAAI,KAAK,SACxB,OAAO,MAAM;IAEf,KAAK,kBAAkB,CAAC,aAAa;AACvC;AAEA,+DAA+D;AAC/D,SAAS,MAAM,KAAK,EAAE;IACpB,OAAO,CAAC;;;gBAGM,EAAE,MAAM,KAAK,CAAC;;;QAGtB,CAAC;AACT;AACA,SAAS,KAAK,KAAK,EAAE;IACnB,OAAO,CAAC;;;cAGI,EAAE,MAAM,KAAK,CAAC;;;cAGd,CAAC;AACf;AACA,mJAAmJ;AACnJ,4BAA4B;AAC5B,mBAAmB;AACnB,+HAA+H;AAC/H,oCAAoC;AACpC,oCAAoC;AACpC,kBAAkB;AAClB,yBAAyB;AACzB,mBAAmB;AACnB,qBAAqB;AACrB,QAAQ;AACR,8BAA8B;AAC9B,8BAA8B;AAC9B,aAAa;AACb,WAAW;AACX,IAAI;AAEJ,wFAAwF;AACxF,oHAAoH;AAEpH,SAAS,QAAQ,KAAK,EAAE;IACtB,MAAM,OAAO,MAAM,KAAK,CAAC,GAAG,CAC1B,CAAC,OAAS,CAAC;0BACW,EAAE,KAAK;2BACN,CAAC;IAG1B,OAAO,CAAC;oBACU,EAAE,KAAK,IAAI,CAAC,IAAI;;MAE9B,CAAC;AACP;AAEA,SAAS,MAAM,KAAK,EAAE;IACpB,OAAO,CAAC;+BACqB,EAAE,MAAM,KAAK,CAAC,SAAS,CAAC;AACvD","sources":["src/app.js"],"sourcesContent":["const model = [\r\n  {\r\n    type: \"title\",\r\n    value: \"HEllo world from JS\",\r\n  },\r\n  { type: \"text\", value: \"I will wrtie somethhing here later\" },\r\n  {\r\n    type: \"columns\",\r\n    value: [\r\n      \"111111111111111\",\r\n      \"2222222222222222\",\r\n      \"33333333333\",\r\n      \"444444444444\",\r\n      \"555555555\",\r\n    ],\r\n  },\r\n  { type: \"image\", value: \"./images/blue.jpg\" },\r\n];\r\n\r\nconst site = document.querySelector(\"#site\");\r\n\r\nmodel.forEach((block) => {\r\n  // создаём html пустой блок, куда будем всё вкладывать\r\n  let html = \"\";\r\n  if (block.type === \"title\") {\r\n    html = title(block);\r\n  } else if (block.type === \"text\") {\r\n    html = text(block);\r\n  } else if (block.type === \"columns\") {\r\n    html = columns(block);\r\n  } else if (block.type === \"image\") {\r\n    html = image(block);\r\n  }\r\n  site.insertAdjacentHTML(\"beforeend\", html);\r\n});\r\n\r\n// делаем функции для того чтобы код был читабельней и понятнее\r\nfunction title(block) {\r\n  return `\r\n        <div class=\"row\">\r\n          <div class=\"col-sm\">\r\n            <h1>${block.value}</h1>\r\n          </div>\r\n        </div>\r\n        `;\r\n}\r\nfunction text(block) {\r\n  return `<div class=\"row\">\r\n          <div class=\"col-sm\">\r\n            <p>\r\n              ${block.value}\r\n            </p>\r\n          </div>\r\n        </div>`;\r\n}\r\n// для того, чтобсгенерировать необходимое колличество колонок нам надо сделать цикл по массиву. в самой функции columns будем генерировать контент\r\n// function columns(block) {\r\n//   let html = \"\";\r\n// далее мы пробегаемся по массиву с помощью метода forEach, где item-это контент массива, затем к строке html добовляем шаблон\r\n//   block.value.forEach((item) => {\r\n//     html += `<div class=\"col-sm\">\r\n//             <p>\r\n//                ${item}\r\n//             </p>\r\n//           </div>`;\r\n//   });\r\n//   return `<div class=\"row\">\r\n//                     ${html}\r\n//     </div>\r\n//       `;\r\n// }\r\n\r\n// можем использовать метод map, который помогает сразу трансформировать метод во что то\r\n// метод map возвращает нам массив, поэтому , чтобы убрать запятые мы должны соединить столбцы с помощью метода join\r\n\r\nfunction columns(block) {\r\n  const html = block.value.map(\r\n    (item) => `<div class=\"col-sm\">\r\n                          ${item}\r\n                     </div>`\r\n  );\r\n\r\n  return `<div class=\"row\">\r\n                    ${html.join(\"\")}\r\n    </div>\r\n      `;\r\n}\r\n\r\nfunction image(block) {\r\n  return `\r\n    <div class=\"row\"><img src=\"${block.value}\"/></div>`;\r\n}\r\n"],"names":[],"version":3,"file":"index.816e7b21.js.map","sourceRoot":"/__parcel_source_root/"}